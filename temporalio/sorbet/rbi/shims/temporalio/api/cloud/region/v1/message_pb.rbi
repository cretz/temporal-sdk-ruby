# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: temporal/api/cloud/region/v1/message.proto
# typed: strict

class Temporalio::Api::Cloud::Region::V1::Region
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::Region::V1::Region) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::Region::V1::Region).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::Region::V1::Region) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::Region::V1::Region, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      cloud_provider: T.nilable(String),
      cloud_provider_region: T.nilable(String),
      location: T.nilable(String)
    ).void
  end
  def initialize(
    id: "",
    cloud_provider: "",
    cloud_provider_region: "",
    location: ""
  )
  end

  # The id of the temporal cloud region.
  sig { returns(String) }
  def id
  end

  # The id of the temporal cloud region.
  sig { params(value: String).void }
  def id=(value)
  end

  # The id of the temporal cloud region.
  sig { void }
  def clear_id
  end

  # The name of the cloud provider that's hosting the region.
# Currently only "aws" is supported.
  sig { returns(String) }
  def cloud_provider
  end

  # The name of the cloud provider that's hosting the region.
# Currently only "aws" is supported.
  sig { params(value: String).void }
  def cloud_provider=(value)
  end

  # The name of the cloud provider that's hosting the region.
# Currently only "aws" is supported.
  sig { void }
  def clear_cloud_provider
  end

  # The region identifier as defined by the cloud provider.
  sig { returns(String) }
  def cloud_provider_region
  end

  # The region identifier as defined by the cloud provider.
  sig { params(value: String).void }
  def cloud_provider_region=(value)
  end

  # The region identifier as defined by the cloud provider.
  sig { void }
  def clear_cloud_provider_region
  end

  # The human readable location of the region.
  sig { returns(String) }
  def location
  end

  # The human readable location of the region.
  sig { params(value: String).void }
  def location=(value)
  end

  # The human readable location of the region.
  sig { void }
  def clear_location
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
