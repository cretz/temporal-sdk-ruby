# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: temporal/api/cloud/cloudservice/v1/request_response.proto
# typed: strict

class Temporalio::Api::Cloud::CloudService::V1::GetUsersRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUsersRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUsersRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUsersRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUsersRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      page_size: T.nilable(Integer),
      page_token: T.nilable(String),
      email: T.nilable(String),
      namespace: T.nilable(String)
    ).void
  end
  def initialize(
    page_size: 0,
    page_token: "",
    email: "",
    namespace: ""
  )
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { returns(Integer) }
  def page_size
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { params(value: Integer).void }
  def page_size=(value)
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { void }
  def clear_page_size
  end

  # The page token if this is continuing from another response - optional.
  sig { returns(String) }
  def page_token
  end

  # The page token if this is continuing from another response - optional.
  sig { params(value: String).void }
  def page_token=(value)
  end

  # The page token if this is continuing from another response - optional.
  sig { void }
  def clear_page_token
  end

  # Filter users by email address - optional.
  sig { returns(String) }
  def email
  end

  # Filter users by email address - optional.
  sig { params(value: String).void }
  def email=(value)
  end

  # Filter users by email address - optional.
  sig { void }
  def clear_email
  end

  # Filter users by the namespace they have access to - optional.
  sig { returns(String) }
  def namespace
  end

  # Filter users by the namespace they have access to - optional.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # Filter users by the namespace they have access to - optional.
  sig { void }
  def clear_namespace
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetUsersResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUsersResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUsersResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUsersResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUsersResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      users: T.nilable(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::User)]),
      next_page_token: T.nilable(String)
    ).void
  end
  def initialize(
    users: [],
    next_page_token: ""
  )
  end

  # The list of users in ascending ids order
  sig { returns(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::User)]) }
  def users
  end

  # The list of users in ascending ids order
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def users=(value)
  end

  # The list of users in ascending ids order
  sig { void }
  def clear_users
  end

  # The next page's token
  sig { returns(String) }
  def next_page_token
  end

  # The next page's token
  sig { params(value: String).void }
  def next_page_token=(value)
  end

  # The next page's token
  sig { void }
  def clear_next_page_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetUserRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      user_id: T.nilable(String)
    ).void
  end
  def initialize(
    user_id: ""
  )
  end

  # The id of the user to get
  sig { returns(String) }
  def user_id
  end

  # The id of the user to get
  sig { params(value: String).void }
  def user_id=(value)
  end

  # The id of the user to get
  sig { void }
  def clear_user_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetUserResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      user: T.nilable(Temporalio::Api::Cloud::Identity::V1::User)
    ).void
  end
  def initialize(
    user: nil
  )
  end

  # The user
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::User)) }
  def user
  end

  # The user
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::User)).void }
  def user=(value)
  end

  # The user
  sig { void }
  def clear_user
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateUserRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserSpec),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    spec: nil,
    async_operation_id: ""
  )
  end

  # The spec for the user to invite
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::UserSpec)) }
  def spec
  end

  # The spec for the user to invite
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserSpec)).void }
  def spec=(value)
  end

  # The spec for the user to invite
  sig { void }
  def clear_spec
  end

  # The id to use for this async operation - optional
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateUserResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      user_id: T.nilable(String),
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    user_id: "",
    async_operation: nil
  )
  end

  # The id of the user that was invited
  sig { returns(String) }
  def user_id
  end

  # The id of the user that was invited
  sig { params(value: String).void }
  def user_id=(value)
  end

  # The id of the user that was invited
  sig { void }
  def clear_user_id
  end

  # The async operation
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateUserRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      user_id: T.nilable(String),
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserSpec),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    user_id: "",
    spec: nil,
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The id of the user to update
  sig { returns(String) }
  def user_id
  end

  # The id of the user to update
  sig { params(value: String).void }
  def user_id=(value)
  end

  # The id of the user to update
  sig { void }
  def clear_user_id
  end

  # The new user specification
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::UserSpec)) }
  def spec
  end

  # The new user specification
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserSpec)).void }
  def spec=(value)
  end

  # The new user specification
  sig { void }
  def clear_spec
  end

  # The version of the user for which this update is intended for
# The latest version can be found in the GetUser operation response
  sig { returns(String) }
  def resource_version
  end

  # The version of the user for which this update is intended for
# The latest version can be found in the GetUser operation response
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the user for which this update is intended for
# The latest version can be found in the GetUser operation response
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation - optional
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateUserResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteUserRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      user_id: T.nilable(String),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    user_id: "",
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The id of the user to delete
  sig { returns(String) }
  def user_id
  end

  # The id of the user to delete
  sig { params(value: String).void }
  def user_id=(value)
  end

  # The id of the user to delete
  sig { void }
  def clear_user_id
  end

  # The version of the user for which this delete is intended for
# The latest version can be found in the GetUser operation response
  sig { returns(String) }
  def resource_version
  end

  # The version of the user for which this delete is intended for
# The latest version can be found in the GetUser operation response
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the user for which this delete is intended for
# The latest version can be found in the GetUser operation response
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation - optional
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteUserResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      user_id: T.nilable(String),
      access: T.nilable(Temporalio::Api::Cloud::Identity::V1::NamespaceAccess),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: "",
    user_id: "",
    access: nil,
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The namespace to set permissions for
  sig { returns(String) }
  def namespace
  end

  # The namespace to set permissions for
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to set permissions for
  sig { void }
  def clear_namespace
  end

  # The id of the user to set permissions for
  sig { returns(String) }
  def user_id
  end

  # The id of the user to set permissions for
  sig { params(value: String).void }
  def user_id=(value)
  end

  # The id of the user to set permissions for
  sig { void }
  def clear_user_id
  end

  # The namespace access to assign the user
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::NamespaceAccess)) }
  def access
  end

  # The namespace access to assign the user
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::NamespaceAccess)).void }
  def access=(value)
  end

  # The namespace access to assign the user
  sig { void }
  def clear_access
  end

  # The version of the user for which this update is intended for
# The latest version can be found in the GetUser operation response
  sig { returns(String) }
  def resource_version
  end

  # The version of the user for which this update is intended for
# The latest version can be found in the GetUser operation response
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the user for which this update is intended for
# The latest version can be found in the GetUser operation response
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation - optional
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserNamespaceAccessResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    async_operation_id: ""
  )
  end

  # The id of the async operation to get
  sig { returns(String) }
  def async_operation_id
  end

  # The id of the async operation to get
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id of the async operation to get
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetAsyncOperationResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      spec: T.nilable(Temporalio::Api::Cloud::Namespace::V1::NamespaceSpec),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    spec: nil,
    async_operation_id: ""
  )
  end

  # The namespace specification.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Namespace::V1::NamespaceSpec)) }
  def spec
  end

  # The namespace specification.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Namespace::V1::NamespaceSpec)).void }
  def spec=(value)
  end

  # The namespace specification.
  sig { void }
  def clear_spec
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateNamespaceResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    namespace: "",
    async_operation: nil
  )
  end

  # The namespace that was created.
  sig { returns(String) }
  def namespace
  end

  # The namespace that was created.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace that was created.
  sig { void }
  def clear_namespace
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetNamespacesRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespacesRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespacesRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespacesRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespacesRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      page_size: T.nilable(Integer),
      page_token: T.nilable(String),
      name: T.nilable(String)
    ).void
  end
  def initialize(
    page_size: 0,
    page_token: "",
    name: ""
  )
  end

  # The requested size of the page to retrieve.
# Cannot exceed 1000. 
# Optional, defaults to 100.
  sig { returns(Integer) }
  def page_size
  end

  # The requested size of the page to retrieve.
# Cannot exceed 1000. 
# Optional, defaults to 100.
  sig { params(value: Integer).void }
  def page_size=(value)
  end

  # The requested size of the page to retrieve.
# Cannot exceed 1000. 
# Optional, defaults to 100.
  sig { void }
  def clear_page_size
  end

  # The page token if this is continuing from another response.
# Optional, defaults to empty.
  sig { returns(String) }
  def page_token
  end

  # The page token if this is continuing from another response.
# Optional, defaults to empty.
  sig { params(value: String).void }
  def page_token=(value)
  end

  # The page token if this is continuing from another response.
# Optional, defaults to empty.
  sig { void }
  def clear_page_token
  end

  # Filter namespaces by their name.
# Optional, defaults to empty.
  sig { returns(String) }
  def name
  end

  # Filter namespaces by their name.
# Optional, defaults to empty.
  sig { params(value: String).void }
  def name=(value)
  end

  # Filter namespaces by their name.
# Optional, defaults to empty.
  sig { void }
  def clear_name
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetNamespacesResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespacesResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespacesResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespacesResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespacesResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespaces: T.nilable(T::Array[T.nilable(Temporalio::Api::Cloud::Namespace::V1::Namespace)]),
      next_page_token: T.nilable(String)
    ).void
  end
  def initialize(
    namespaces: [],
    next_page_token: ""
  )
  end

  # The list of namespaces in ascending name order.
  sig { returns(T::Array[T.nilable(Temporalio::Api::Cloud::Namespace::V1::Namespace)]) }
  def namespaces
  end

  # The list of namespaces in ascending name order.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def namespaces=(value)
  end

  # The list of namespaces in ascending name order.
  sig { void }
  def clear_namespaces
  end

  # The next page's token.
  sig { returns(String) }
  def next_page_token
  end

  # The next page's token.
  sig { params(value: String).void }
  def next_page_token=(value)
  end

  # The next page's token.
  sig { void }
  def clear_next_page_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetNamespaceRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespaceRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespaceRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespaceRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespaceRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: ""
  )
  end

  # The namespace to get.
  sig { returns(String) }
  def namespace
  end

  # The namespace to get.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to get.
  sig { void }
  def clear_namespace
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetNamespaceResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespaceResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespaceResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetNamespaceResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetNamespaceResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(Temporalio::Api::Cloud::Namespace::V1::Namespace)
    ).void
  end
  def initialize(
    namespace: nil
  )
  end

  # The namespace.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Namespace::V1::Namespace)) }
  def namespace
  end

  # The namespace.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Namespace::V1::Namespace)).void }
  def namespace=(value)
  end

  # The namespace.
  sig { void }
  def clear_namespace
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      spec: T.nilable(Temporalio::Api::Cloud::Namespace::V1::NamespaceSpec),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: "",
    spec: nil,
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The namespace to update.
  sig { returns(String) }
  def namespace
  end

  # The namespace to update.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to update.
  sig { void }
  def clear_namespace
  end

  # The new namespace specification.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Namespace::V1::NamespaceSpec)) }
  def spec
  end

  # The new namespace specification.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Namespace::V1::NamespaceSpec)).void }
  def spec=(value)
  end

  # The new namespace specification.
  sig { void }
  def clear_spec
  end

  # The version of the namespace for which this update is intended for.
# The latest version can be found in the namespace status.
  sig { returns(String) }
  def resource_version
  end

  # The version of the namespace for which this update is intended for.
# The latest version can be found in the namespace status.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the namespace for which this update is intended for.
# The latest version can be found in the namespace status.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateNamespaceResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      existing_custom_search_attribute_name: T.nilable(String),
      new_custom_search_attribute_name: T.nilable(String),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: "",
    existing_custom_search_attribute_name: "",
    new_custom_search_attribute_name: "",
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The namespace to rename the custom search attribute for.
  sig { returns(String) }
  def namespace
  end

  # The namespace to rename the custom search attribute for.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to rename the custom search attribute for.
  sig { void }
  def clear_namespace
  end

  # The existing name of the custom search attribute to be renamed.
  sig { returns(String) }
  def existing_custom_search_attribute_name
  end

  # The existing name of the custom search attribute to be renamed.
  sig { params(value: String).void }
  def existing_custom_search_attribute_name=(value)
  end

  # The existing name of the custom search attribute to be renamed.
  sig { void }
  def clear_existing_custom_search_attribute_name
  end

  # The new name of the custom search attribute.
  sig { returns(String) }
  def new_custom_search_attribute_name
  end

  # The new name of the custom search attribute.
  sig { params(value: String).void }
  def new_custom_search_attribute_name=(value)
  end

  # The new name of the custom search attribute.
  sig { void }
  def clear_new_custom_search_attribute_name
  end

  # The version of the namespace for which this update is intended for.
# The latest version can be found in the namespace status.
  sig { returns(String) }
  def resource_version
  end

  # The version of the namespace for which this update is intended for.
# The latest version can be found in the namespace status.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the namespace for which this update is intended for.
# The latest version can be found in the namespace status.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::RenameCustomSearchAttributeResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: "",
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The namespace to delete.
  sig { returns(String) }
  def namespace
  end

  # The namespace to delete.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to delete.
  sig { void }
  def clear_namespace
  end

  # The version of the namespace for which this delete is intended for.
# The latest version can be found in the namespace status.
  sig { returns(String) }
  def resource_version
  end

  # The version of the namespace for which this delete is intended for.
# The latest version can be found in the namespace status.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the namespace for which this delete is intended for.
# The latest version can be found in the namespace status.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteNamespaceResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      region: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: "",
    region: "",
    async_operation_id: ""
  )
  end

  # The namespace to failover.
  sig { returns(String) }
  def namespace
  end

  # The namespace to failover.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to failover.
  sig { void }
  def clear_namespace
  end

  # The id of the region to failover to.
# Must be a region that the namespace is currently available in.
  sig { returns(String) }
  def region
  end

  # The id of the region to failover to.
# Must be a region that the namespace is currently available in.
  sig { params(value: String).void }
  def region=(value)
  end

  # The id of the region to failover to.
# Must be a region that the namespace is currently available in.
  sig { void }
  def clear_region
  end

  # The id to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::FailoverNamespaceRegionResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      region: T.nilable(String),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: "",
    region: "",
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The namespace to add the region to.
  sig { returns(String) }
  def namespace
  end

  # The namespace to add the region to.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to add the region to.
  sig { void }
  def clear_namespace
  end

  # The id of the standby region to add to the namespace.
# The GetRegions API can be used to get the list of valid region ids.
# Example: "aws-us-west-2".
  sig { returns(String) }
  def region
  end

  # The id of the standby region to add to the namespace.
# The GetRegions API can be used to get the list of valid region ids.
# Example: "aws-us-west-2".
  sig { params(value: String).void }
  def region=(value)
  end

  # The id of the standby region to add to the namespace.
# The GetRegions API can be used to get the list of valid region ids.
# Example: "aws-us-west-2".
  sig { void }
  def clear_region
  end

  # The version of the namespace for which this add region operation is intended for.
# The latest version can be found in the GetNamespace operation response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the namespace for which this add region operation is intended for.
# The latest version can be found in the GetNamespace operation response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the namespace for which this add region operation is intended for.
# The latest version can be found in the GetNamespace operation response.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::AddNamespaceRegionResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetRegionsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionsRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionsRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionsRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionsRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig {void}
  def initialize; end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetRegionsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionsResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionsResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionsResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionsResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      regions: T.nilable(T::Array[T.nilable(Temporalio::Api::Cloud::Region::V1::Region)])
    ).void
  end
  def initialize(
    regions: []
  )
  end

  # The temporal cloud regions.
  sig { returns(T::Array[T.nilable(Temporalio::Api::Cloud::Region::V1::Region)]) }
  def regions
  end

  # The temporal cloud regions.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def regions=(value)
  end

  # The temporal cloud regions.
  sig { void }
  def clear_regions
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetRegionRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      region: T.nilable(String)
    ).void
  end
  def initialize(
    region: ""
  )
  end

  # The id of the region to get.
  sig { returns(String) }
  def region
  end

  # The id of the region to get.
  sig { params(value: String).void }
  def region=(value)
  end

  # The id of the region to get.
  sig { void }
  def clear_region
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetRegionResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetRegionResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetRegionResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      region: T.nilable(Temporalio::Api::Cloud::Region::V1::Region)
    ).void
  end
  def initialize(
    region: nil
  )
  end

  # The temporal cloud region.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Region::V1::Region)) }
  def region
  end

  # The temporal cloud region.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Region::V1::Region)).void }
  def region=(value)
  end

  # The temporal cloud region.
  sig { void }
  def clear_region
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetApiKeysRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeysRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeysRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeysRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeysRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      page_size: T.nilable(Integer),
      page_token: T.nilable(String),
      owner_id: T.nilable(String),
      owner_type: T.nilable(String)
    ).void
  end
  def initialize(
    page_size: 0,
    page_token: "",
    owner_id: "",
    owner_type: ""
  )
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { returns(Integer) }
  def page_size
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { params(value: Integer).void }
  def page_size=(value)
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { void }
  def clear_page_size
  end

  # The page token if this is continuing from another response - optional.
  sig { returns(String) }
  def page_token
  end

  # The page token if this is continuing from another response - optional.
  sig { params(value: String).void }
  def page_token=(value)
  end

  # The page token if this is continuing from another response - optional.
  sig { void }
  def clear_page_token
  end

  # Filter api keys by owner id - optional.
  sig { returns(String) }
  def owner_id
  end

  # Filter api keys by owner id - optional.
  sig { params(value: String).void }
  def owner_id=(value)
  end

  # Filter api keys by owner id - optional.
  sig { void }
  def clear_owner_id
  end

  # Filter api keys by owner type - optional.
# Possible values: user, service-account
  sig { returns(String) }
  def owner_type
  end

  # Filter api keys by owner type - optional.
# Possible values: user, service-account
  sig { params(value: String).void }
  def owner_type=(value)
  end

  # Filter api keys by owner type - optional.
# Possible values: user, service-account
  sig { void }
  def clear_owner_type
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetApiKeysResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeysResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeysResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeysResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeysResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      api_keys: T.nilable(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKey)]),
      next_page_token: T.nilable(String)
    ).void
  end
  def initialize(
    api_keys: [],
    next_page_token: ""
  )
  end

  # The list of api keys in ascending id order.
  sig { returns(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKey)]) }
  def api_keys
  end

  # The list of api keys in ascending id order.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def api_keys=(value)
  end

  # The list of api keys in ascending id order.
  sig { void }
  def clear_api_keys
  end

  # The next page's token.
  sig { returns(String) }
  def next_page_token
  end

  # The next page's token.
  sig { params(value: String).void }
  def next_page_token=(value)
  end

  # The next page's token.
  sig { void }
  def clear_next_page_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetApiKeyRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeyRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeyRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeyRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeyRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      key_id: T.nilable(String)
    ).void
  end
  def initialize(
    key_id: ""
  )
  end

  # The id of the api key to get.
  sig { returns(String) }
  def key_id
  end

  # The id of the api key to get.
  sig { params(value: String).void }
  def key_id=(value)
  end

  # The id of the api key to get.
  sig { void }
  def clear_key_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetApiKeyResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeyResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeyResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetApiKeyResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetApiKeyResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      api_key: T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKey)
    ).void
  end
  def initialize(
    api_key: nil
  )
  end

  # The api key.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKey)) }
  def api_key
  end

  # The api key.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKey)).void }
  def api_key=(value)
  end

  # The api key.
  sig { void }
  def clear_api_key
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKeySpec),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    spec: nil,
    async_operation_id: ""
  )
  end

  # The spec for the api key to create.
# Create api key only supports service-account owner type for now.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKeySpec)) }
  def spec
  end

  # The spec for the api key to create.
# Create api key only supports service-account owner type for now.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKeySpec)).void }
  def spec=(value)
  end

  # The spec for the api key to create.
# Create api key only supports service-account owner type for now.
  sig { void }
  def clear_spec
  end

  # The id to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateApiKeyResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      key_id: T.nilable(String),
      token: T.nilable(String),
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    key_id: "",
    token: "",
    async_operation: nil
  )
  end

  # The id of the api key created.
  sig { returns(String) }
  def key_id
  end

  # The id of the api key created.
  sig { params(value: String).void }
  def key_id=(value)
  end

  # The id of the api key created.
  sig { void }
  def clear_key_id
  end

  # The token of the api key created. 
# This is a secret and should be stored securely.
# It will not be retrievable after this response.
  sig { returns(String) }
  def token
  end

  # The token of the api key created. 
# This is a secret and should be stored securely.
# It will not be retrievable after this response.
  sig { params(value: String).void }
  def token=(value)
  end

  # The token of the api key created. 
# This is a secret and should be stored securely.
# It will not be retrievable after this response.
  sig { void }
  def clear_token
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      key_id: T.nilable(String),
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKeySpec),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    key_id: "",
    spec: nil,
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The id of the api key to update.
  sig { returns(String) }
  def key_id
  end

  # The id of the api key to update.
  sig { params(value: String).void }
  def key_id=(value)
  end

  # The id of the api key to update.
  sig { void }
  def clear_key_id
  end

  # The new api key specification.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKeySpec)) }
  def spec
  end

  # The new api key specification.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::ApiKeySpec)).void }
  def spec=(value)
  end

  # The new api key specification.
  sig { void }
  def clear_spec
  end

  # The version of the api key for which this update is intended for.
# The latest version can be found in the GetApiKey operation response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the api key for which this update is intended for.
# The latest version can be found in the GetApiKey operation response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the api key for which this update is intended for.
# The latest version can be found in the GetApiKey operation response.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateApiKeyResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      key_id: T.nilable(String),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    key_id: "",
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The id of the api key to delete.
  sig { returns(String) }
  def key_id
  end

  # The id of the api key to delete.
  sig { params(value: String).void }
  def key_id=(value)
  end

  # The id of the api key to delete.
  sig { void }
  def clear_key_id
  end

  # The version of the api key for which this delete is intended for.
# The latest version can be found in the GetApiKey operation response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the api key for which this delete is intended for.
# The latest version can be found in the GetApiKey operation response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the api key for which this delete is intended for.
# The latest version can be found in the GetApiKey operation response.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteApiKeyResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      page_size: T.nilable(Integer),
      page_token: T.nilable(String),
      namespace: T.nilable(String),
      group_name: T.nilable(String)
    ).void
  end
  def initialize(
    page_size: 0,
    page_token: "",
    namespace: "",
    group_name: ""
  )
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { returns(Integer) }
  def page_size
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { params(value: Integer).void }
  def page_size=(value)
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { void }
  def clear_page_size
  end

  # The page token if this is continuing from another response - optional.
  sig { returns(String) }
  def page_token
  end

  # The page token if this is continuing from another response - optional.
  sig { params(value: String).void }
  def page_token=(value)
  end

  # The page token if this is continuing from another response - optional.
  sig { void }
  def clear_page_token
  end

  # Filter groups by the namespace they have access to - optional.
  sig { returns(String) }
  def namespace
  end

  # Filter groups by the namespace they have access to - optional.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # Filter groups by the namespace they have access to - optional.
  sig { void }
  def clear_namespace
  end

  # Filter groups by their name - optional.
  sig { returns(String) }
  def group_name
  end

  # Filter groups by their name - optional.
  sig { params(value: String).void }
  def group_name=(value)
  end

  # Filter groups by their name - optional.
  sig { void }
  def clear_group_name
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupsResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      groups: T.nilable(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroup)]),
      next_page_token: T.nilable(String)
    ).void
  end
  def initialize(
    groups: [],
    next_page_token: ""
  )
  end

  # The list of groups in ascending name order.
  sig { returns(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroup)]) }
  def groups
  end

  # The list of groups in ascending name order.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def groups=(value)
  end

  # The list of groups in ascending name order.
  sig { void }
  def clear_groups
  end

  # The next page's token.
  sig { returns(String) }
  def next_page_token
  end

  # The next page's token.
  sig { params(value: String).void }
  def next_page_token=(value)
  end

  # The next page's token.
  sig { void }
  def clear_next_page_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetUserGroupRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      group_id: T.nilable(String)
    ).void
  end
  def initialize(
    group_id: ""
  )
  end

  # The id of the group to get.
  sig { returns(String) }
  def group_id
  end

  # The id of the group to get.
  sig { params(value: String).void }
  def group_id=(value)
  end

  # The id of the group to get.
  sig { void }
  def clear_group_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetUserGroupResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetUserGroupResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetUserGroupResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      group: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroup)
    ).void
  end
  def initialize(
    group: nil
  )
  end

  # The group.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroup)) }
  def group
  end

  # The group.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroup)).void }
  def group=(value)
  end

  # The group.
  sig { void }
  def clear_group
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroupSpec),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    spec: nil,
    async_operation_id: ""
  )
  end

  # The spec for the group to create.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroupSpec)) }
  def spec
  end

  # The spec for the group to create.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroupSpec)).void }
  def spec=(value)
  end

  # The spec for the group to create.
  sig { void }
  def clear_spec
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateUserGroupResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      group_id: T.nilable(String),
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    group_id: "",
    async_operation: nil
  )
  end

  # The id of the group that was created.
  sig { returns(String) }
  def group_id
  end

  # The id of the group that was created.
  sig { params(value: String).void }
  def group_id=(value)
  end

  # The id of the group that was created.
  sig { void }
  def clear_group_id
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      group_id: T.nilable(String),
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroupSpec),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    group_id: "",
    spec: nil,
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The id of the group to update.
  sig { returns(String) }
  def group_id
  end

  # The id of the group to update.
  sig { params(value: String).void }
  def group_id=(value)
  end

  # The id of the group to update.
  sig { void }
  def clear_group_id
  end

  # The new group specification.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroupSpec)) }
  def spec
  end

  # The new group specification.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::UserGroupSpec)).void }
  def spec=(value)
  end

  # The new group specification.
  sig { void }
  def clear_spec
  end

  # The version of the group for which this update is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the group for which this update is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the group for which this update is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateUserGroupResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      group_id: T.nilable(String),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    group_id: "",
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The id of the group to delete.
  sig { returns(String) }
  def group_id
  end

  # The id of the group to delete.
  sig { params(value: String).void }
  def group_id=(value)
  end

  # The id of the group to delete.
  sig { void }
  def clear_group_id
  end

  # The version of the group for which this delete is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the group for which this delete is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the group for which this delete is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation.
# Optional, if not provided a random id will be generated.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteUserGroupResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      namespace: T.nilable(String),
      group_id: T.nilable(String),
      access: T.nilable(Temporalio::Api::Cloud::Identity::V1::NamespaceAccess),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    namespace: "",
    group_id: "",
    access: nil,
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The namespace to set permissions for.
  sig { returns(String) }
  def namespace
  end

  # The namespace to set permissions for.
  sig { params(value: String).void }
  def namespace=(value)
  end

  # The namespace to set permissions for.
  sig { void }
  def clear_namespace
  end

  # The id of the group to set permissions for.
  sig { returns(String) }
  def group_id
  end

  # The id of the group to set permissions for.
  sig { params(value: String).void }
  def group_id=(value)
  end

  # The id of the group to set permissions for.
  sig { void }
  def clear_group_id
  end

  # The namespace access to assign the group. If left empty, the group will be removed from the namespace access.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::NamespaceAccess)) }
  def access
  end

  # The namespace access to assign the group. If left empty, the group will be removed from the namespace access.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::NamespaceAccess)).void }
  def access=(value)
  end

  # The namespace access to assign the group. If left empty, the group will be removed from the namespace access.
  sig { void }
  def clear_access
  end

  # The version of the group for which this update is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the group for which this update is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the group for which this update is intended for.
# The latest version can be found in the GetGroup operation response.
  sig { void }
  def clear_resource_version
  end

  # The id to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The id to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The id to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::SetUserGroupNamespaceAccessResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccountSpec),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    spec: nil,
    async_operation_id: ""
  )
  end

  # The spec of the service account to create.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccountSpec)) }
  def spec
  end

  # The spec of the service account to create.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccountSpec)).void }
  def spec=(value)
  end

  # The spec of the service account to create.
  sig { void }
  def clear_spec
  end

  # The ID to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The ID to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The ID to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::CreateServiceAccountResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      service_account_id: T.nilable(String),
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    service_account_id: "",
    async_operation: nil
  )
  end

  # The ID of the created service account.
  sig { returns(String) }
  def service_account_id
  end

  # The ID of the created service account.
  sig { params(value: String).void }
  def service_account_id=(value)
  end

  # The ID of the created service account.
  sig { void }
  def clear_service_account_id
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      service_account_id: T.nilable(String)
    ).void
  end
  def initialize(
    service_account_id: ""
  )
  end

  # ID of the service account to retrieve.
  sig { returns(String) }
  def service_account_id
  end

  # ID of the service account to retrieve.
  sig { params(value: String).void }
  def service_account_id=(value)
  end

  # ID of the service account to retrieve.
  sig { void }
  def clear_service_account_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      service_account: T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccount)
    ).void
  end
  def initialize(
    service_account: nil
  )
  end

  # The service account retrieved.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccount)) }
  def service_account
  end

  # The service account retrieved.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccount)).void }
  def service_account=(value)
  end

  # The service account retrieved.
  sig { void }
  def clear_service_account
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      page_size: T.nilable(Integer),
      page_token: T.nilable(String)
    ).void
  end
  def initialize(
    page_size: 0,
    page_token: ""
  )
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { returns(Integer) }
  def page_size
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { params(value: Integer).void }
  def page_size=(value)
  end

  # The requested size of the page to retrieve - optional.
# Cannot exceed 1000. Defaults to 100.
  sig { void }
  def clear_page_size
  end

  # The page token if this is continuing from another response - optional.
  sig { returns(String) }
  def page_token
  end

  # The page token if this is continuing from another response - optional.
  sig { params(value: String).void }
  def page_token=(value)
  end

  # The page token if this is continuing from another response - optional.
  sig { void }
  def clear_page_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::GetServiceAccountsResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      service_account: T.nilable(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccount)]),
      next_page_token: T.nilable(String)
    ).void
  end
  def initialize(
    service_account: [],
    next_page_token: ""
  )
  end

  # The list of service accounts in ascending ID order.
  sig { returns(T::Array[T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccount)]) }
  def service_account
  end

  # The list of service accounts in ascending ID order.
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def service_account=(value)
  end

  # The list of service accounts in ascending ID order.
  sig { void }
  def clear_service_account
  end

  # The next page token, set if there is another page.
  sig { returns(String) }
  def next_page_token
  end

  # The next page token, set if there is another page.
  sig { params(value: String).void }
  def next_page_token=(value)
  end

  # The next page token, set if there is another page.
  sig { void }
  def clear_next_page_token
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      service_account_id: T.nilable(String),
      spec: T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccountSpec),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    service_account_id: "",
    spec: nil,
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The ID of the service account to update.
  sig { returns(String) }
  def service_account_id
  end

  # The ID of the service account to update.
  sig { params(value: String).void }
  def service_account_id=(value)
  end

  # The ID of the service account to update.
  sig { void }
  def clear_service_account_id
  end

  # The new service account specification.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccountSpec)) }
  def spec
  end

  # The new service account specification.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Identity::V1::ServiceAccountSpec)).void }
  def spec=(value)
  end

  # The new service account specification.
  sig { void }
  def clear_spec
  end

  # The version of the service account for which this update is intended for.
# The latest version can be found in the GetServiceAccount response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the service account for which this update is intended for.
# The latest version can be found in the GetServiceAccount response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the service account for which this update is intended for.
# The latest version can be found in the GetServiceAccount response.
  sig { void }
  def clear_resource_version
  end

  # The ID to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The ID to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The ID to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::UpdateServiceAccountResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountRequest
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountRequest) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountRequest).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountRequest) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountRequest, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      service_account_id: T.nilable(String),
      resource_version: T.nilable(String),
      async_operation_id: T.nilable(String)
    ).void
  end
  def initialize(
    service_account_id: "",
    resource_version: "",
    async_operation_id: ""
  )
  end

  # The ID of the service account to delete;
  sig { returns(String) }
  def service_account_id
  end

  # The ID of the service account to delete;
  sig { params(value: String).void }
  def service_account_id=(value)
  end

  # The ID of the service account to delete;
  sig { void }
  def clear_service_account_id
  end

  # The version of the service account for which this update is intended for.
# The latest version can be found in the GetServiceAccount response.
  sig { returns(String) }
  def resource_version
  end

  # The version of the service account for which this update is intended for.
# The latest version can be found in the GetServiceAccount response.
  sig { params(value: String).void }
  def resource_version=(value)
  end

  # The version of the service account for which this update is intended for.
# The latest version can be found in the GetServiceAccount response.
  sig { void }
  def clear_resource_version
  end

  # The ID to use for this async operation - optional.
  sig { returns(String) }
  def async_operation_id
  end

  # The ID to use for this async operation - optional.
  sig { params(value: String).void }
  def async_operation_id=(value)
  end

  # The ID to use for this async operation - optional.
  sig { void }
  def clear_async_operation_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

class Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountResponse
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountResponse) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountResponse).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountResponse) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Cloud::CloudService::V1::DeleteServiceAccountResponse, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      async_operation: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)
    ).void
  end
  def initialize(
    async_operation: nil
  )
  end

  # The async operation.
  sig { returns(T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)) }
  def async_operation
  end

  # The async operation.
  sig { params(value: T.nilable(Temporalio::Api::Cloud::Operation::V1::AsyncOperation)).void }
  def async_operation=(value)
  end

  # The async operation.
  sig { void }
  def clear_async_operation
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
