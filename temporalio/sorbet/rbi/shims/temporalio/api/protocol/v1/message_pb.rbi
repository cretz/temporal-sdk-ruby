# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: temporal/api/protocol/v1/message.proto
# typed: strict

# (-- api-linter: core::0146::any=disabled
#     aip.dev/not-precedent: We want runtime extensibility for the body field --)
class Temporalio::Api::Protocol::V1::Message
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Api::Protocol::V1::Message) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Api::Protocol::V1::Message).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Api::Protocol::V1::Message) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Api::Protocol::V1::Message, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      id: T.nilable(String),
      protocol_instance_id: T.nilable(String),
      event_id: T.nilable(Integer),
      command_index: T.nilable(Integer),
      body: T.nilable(Google::Protobuf::Any)
    ).void
  end
  def initialize(
    id: "",
    protocol_instance_id: "",
    event_id: 0,
    command_index: 0,
    body: nil
  )
  end

  # An ID for this specific message.
  sig { returns(String) }
  def id
  end

  # An ID for this specific message.
  sig { params(value: String).void }
  def id=(value)
  end

  # An ID for this specific message.
  sig { void }
  def clear_id
  end

  # Identifies the specific instance of a protocol to which this message
# belongs.
  sig { returns(String) }
  def protocol_instance_id
  end

  # Identifies the specific instance of a protocol to which this message
# belongs.
  sig { params(value: String).void }
  def protocol_instance_id=(value)
  end

  # Identifies the specific instance of a protocol to which this message
# belongs.
  sig { void }
  def clear_protocol_instance_id
  end

  sig { returns(Integer) }
  def event_id
  end

  sig { params(value: Integer).void }
  def event_id=(value)
  end

  sig { void }
  def clear_event_id
  end

  sig { returns(Integer) }
  def command_index
  end

  sig { params(value: Integer).void }
  def command_index=(value)
  end

  sig { void }
  def clear_command_index
  end

  # The opaque data carried by this message. The protocol type can be
# extracted from the package name of the message carried inside the Any.
  sig { returns(T.nilable(Google::Protobuf::Any)) }
  def body
  end

  # The opaque data carried by this message. The protocol type can be
# extracted from the package name of the message carried inside the Any.
  sig { params(value: T.nilable(Google::Protobuf::Any)).void }
  def body=(value)
  end

  # The opaque data carried by this message. The protocol type can be
# extracted from the package name of the message carried inside the Any.
  sig { void }
  def clear_body
  end

  sig { returns(T.nilable(Symbol)) }
  def sequencing_id
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
