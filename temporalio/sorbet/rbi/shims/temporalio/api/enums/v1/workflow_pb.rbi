# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: temporal/api/enums/v1/workflow.proto
# typed: strict

module Temporalio::Api::Enums::V1::WorkflowIdReusePolicy
  self::WORKFLOW_ID_REUSE_POLICY_UNSPECIFIED = T.let(0, Integer)
  self::WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE = T.let(1, Integer)
  self::WORKFLOW_ID_REUSE_POLICY_ALLOW_DUPLICATE_FAILED_ONLY = T.let(2, Integer)
  self::WORKFLOW_ID_REUSE_POLICY_REJECT_DUPLICATE = T.let(3, Integer)
  self::WORKFLOW_ID_REUSE_POLICY_TERMINATE_IF_RUNNING = T.let(4, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::WorkflowIdConflictPolicy
  self::WORKFLOW_ID_CONFLICT_POLICY_UNSPECIFIED = T.let(0, Integer)
  self::WORKFLOW_ID_CONFLICT_POLICY_FAIL = T.let(1, Integer)
  self::WORKFLOW_ID_CONFLICT_POLICY_USE_EXISTING = T.let(2, Integer)
  self::WORKFLOW_ID_CONFLICT_POLICY_TERMINATE_EXISTING = T.let(3, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::ParentClosePolicy
  self::PARENT_CLOSE_POLICY_UNSPECIFIED = T.let(0, Integer)
  self::PARENT_CLOSE_POLICY_TERMINATE = T.let(1, Integer)
  self::PARENT_CLOSE_POLICY_ABANDON = T.let(2, Integer)
  self::PARENT_CLOSE_POLICY_REQUEST_CANCEL = T.let(3, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::ContinueAsNewInitiator
  self::CONTINUE_AS_NEW_INITIATOR_UNSPECIFIED = T.let(0, Integer)
  self::CONTINUE_AS_NEW_INITIATOR_WORKFLOW = T.let(1, Integer)
  self::CONTINUE_AS_NEW_INITIATOR_RETRY = T.let(2, Integer)
  self::CONTINUE_AS_NEW_INITIATOR_CRON_SCHEDULE = T.let(3, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::WorkflowExecutionStatus
  self::WORKFLOW_EXECUTION_STATUS_UNSPECIFIED = T.let(0, Integer)
  self::WORKFLOW_EXECUTION_STATUS_RUNNING = T.let(1, Integer)
  self::WORKFLOW_EXECUTION_STATUS_COMPLETED = T.let(2, Integer)
  self::WORKFLOW_EXECUTION_STATUS_FAILED = T.let(3, Integer)
  self::WORKFLOW_EXECUTION_STATUS_CANCELED = T.let(4, Integer)
  self::WORKFLOW_EXECUTION_STATUS_TERMINATED = T.let(5, Integer)
  self::WORKFLOW_EXECUTION_STATUS_CONTINUED_AS_NEW = T.let(6, Integer)
  self::WORKFLOW_EXECUTION_STATUS_TIMED_OUT = T.let(7, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::PendingActivityState
  self::PENDING_ACTIVITY_STATE_UNSPECIFIED = T.let(0, Integer)
  self::PENDING_ACTIVITY_STATE_SCHEDULED = T.let(1, Integer)
  self::PENDING_ACTIVITY_STATE_STARTED = T.let(2, Integer)
  self::PENDING_ACTIVITY_STATE_CANCEL_REQUESTED = T.let(3, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::PendingWorkflowTaskState
  self::PENDING_WORKFLOW_TASK_STATE_UNSPECIFIED = T.let(0, Integer)
  self::PENDING_WORKFLOW_TASK_STATE_SCHEDULED = T.let(1, Integer)
  self::PENDING_WORKFLOW_TASK_STATE_STARTED = T.let(2, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::HistoryEventFilterType
  self::HISTORY_EVENT_FILTER_TYPE_UNSPECIFIED = T.let(0, Integer)
  self::HISTORY_EVENT_FILTER_TYPE_ALL_EVENT = T.let(1, Integer)
  self::HISTORY_EVENT_FILTER_TYPE_CLOSE_EVENT = T.let(2, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::RetryState
  self::RETRY_STATE_UNSPECIFIED = T.let(0, Integer)
  self::RETRY_STATE_IN_PROGRESS = T.let(1, Integer)
  self::RETRY_STATE_NON_RETRYABLE_FAILURE = T.let(2, Integer)
  self::RETRY_STATE_TIMEOUT = T.let(3, Integer)
  self::RETRY_STATE_MAXIMUM_ATTEMPTS_REACHED = T.let(4, Integer)
  self::RETRY_STATE_RETRY_POLICY_NOT_SET = T.let(5, Integer)
  self::RETRY_STATE_INTERNAL_SERVER_ERROR = T.let(6, Integer)
  self::RETRY_STATE_CANCEL_REQUESTED = T.let(7, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end

module Temporalio::Api::Enums::V1::TimeoutType
  self::TIMEOUT_TYPE_UNSPECIFIED = T.let(0, Integer)
  self::TIMEOUT_TYPE_START_TO_CLOSE = T.let(1, Integer)
  self::TIMEOUT_TYPE_SCHEDULE_TO_START = T.let(2, Integer)
  self::TIMEOUT_TYPE_SCHEDULE_TO_CLOSE = T.let(3, Integer)
  self::TIMEOUT_TYPE_HEARTBEAT = T.let(4, Integer)

  sig { params(value: Integer).returns(T.nilable(Symbol)) }
  def self.lookup(value)
  end

  sig { params(value: Symbol).returns(T.nilable(Integer)) }
  def self.resolve(value)
  end

  sig { returns(::Google::Protobuf::EnumDescriptor) }
  def self.descriptor
  end
end
