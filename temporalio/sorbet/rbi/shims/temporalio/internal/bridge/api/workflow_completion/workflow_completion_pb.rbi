# Code generated by protoc-gen-rbi. DO NOT EDIT.
# source: temporal/sdk/core/workflow_completion/workflow_completion.proto
# typed: strict

# Result of a single workflow activation, reported from lang to core
class Temporalio::Internal::Bridge::Api::WorkflowCompletion::WorkflowActivationCompletion
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Internal::Bridge::Api::WorkflowCompletion::WorkflowActivationCompletion) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Internal::Bridge::Api::WorkflowCompletion::WorkflowActivationCompletion).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Internal::Bridge::Api::WorkflowCompletion::WorkflowActivationCompletion) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Internal::Bridge::Api::WorkflowCompletion::WorkflowActivationCompletion, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      run_id: T.nilable(String),
      successful: T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success),
      failed: T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure)
    ).void
  end
  def initialize(
    run_id: "",
    successful: nil,
    failed: nil
  )
  end

  # The run id from the workflow activation you are completing
  sig { returns(String) }
  def run_id
  end

  # The run id from the workflow activation you are completing
  sig { params(value: String).void }
  def run_id=(value)
  end

  # The run id from the workflow activation you are completing
  sig { void }
  def clear_run_id
  end

  sig { returns(T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success)) }
  def successful
  end

  sig { params(value: T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success)).void }
  def successful=(value)
  end

  sig { void }
  def clear_successful
  end

  sig { returns(T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure)) }
  def failed
  end

  sig { params(value: T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure)).void }
  def failed=(value)
  end

  sig { void }
  def clear_failed
  end

  sig { returns(T.nilable(Symbol)) }
  def status
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

# Successful workflow activation with a list of commands generated by the workflow execution
class Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Internal::Bridge::Api::WorkflowCompletion::Success, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      commands: T.nilable(T::Array[T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCommands::WorkflowCommand)]),
      used_internal_flags: T.nilable(T::Array[Integer])
    ).void
  end
  def initialize(
    commands: [],
    used_internal_flags: []
  )
  end

  # A list of commands to send back to the temporal server
  sig { returns(T::Array[T.nilable(Temporalio::Internal::Bridge::Api::WorkflowCommands::WorkflowCommand)]) }
  def commands
  end

  # A list of commands to send back to the temporal server
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def commands=(value)
  end

  # A list of commands to send back to the temporal server
  sig { void }
  def clear_commands
  end

  # Any internal flags which the lang SDK used in the processing of this activation
  sig { returns(T::Array[Integer]) }
  def used_internal_flags
  end

  # Any internal flags which the lang SDK used in the processing of this activation
  sig { params(value: ::Google::Protobuf::RepeatedField).void }
  def used_internal_flags=(value)
  end

  # Any internal flags which the lang SDK used in the processing of this activation
  sig { void }
  def clear_used_internal_flags
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end

# Failure to activate or execute a workflow
class Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure
  include ::Google::Protobuf::MessageExts
  extend ::Google::Protobuf::MessageExts::ClassMethods

  sig { params(str: String).returns(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure) }
  def self.decode(str)
  end

  sig { params(msg: Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure).returns(String) }
  def self.encode(msg)
  end

  sig { params(str: String, kw: T.untyped).returns(Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure) }
  def self.decode_json(str, **kw)
  end

  sig { params(msg: Temporalio::Internal::Bridge::Api::WorkflowCompletion::Failure, kw: T.untyped).returns(String) }
  def self.encode_json(msg, **kw)
  end

  sig { returns(::Google::Protobuf::Descriptor) }
  def self.descriptor
  end

  sig do
    params(
      failure: T.nilable(Temporalio::Api::Failure::V1::Failure),
      force_cause: T.nilable(T.any(Symbol, String, Integer))
    ).void
  end
  def initialize(
    failure: nil,
    force_cause: :WORKFLOW_TASK_FAILED_CAUSE_UNSPECIFIED
  )
  end

  sig { returns(T.nilable(Temporalio::Api::Failure::V1::Failure)) }
  def failure
  end

  sig { params(value: T.nilable(Temporalio::Api::Failure::V1::Failure)).void }
  def failure=(value)
  end

  sig { void }
  def clear_failure
  end

  # Forces overriding the WFT failure cause
  sig { returns(T.any(Symbol, Integer)) }
  def force_cause
  end

  # Forces overriding the WFT failure cause
  sig { params(value: T.any(Symbol, String, Integer)).void }
  def force_cause=(value)
  end

  # Forces overriding the WFT failure cause
  sig { void }
  def clear_force_cause
  end

  sig { params(field: String).returns(T.untyped) }
  def [](field)
  end

  sig { params(field: String, value: T.untyped).void }
  def []=(field, value)
  end

  sig { returns(T::Hash[Symbol, T.untyped]) }
  def to_h
  end
end
